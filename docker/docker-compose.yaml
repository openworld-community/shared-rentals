version: "3.7"

services:
  front:
    build:
      dockerfile: docker/front.Dockerfile
      context: ..
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy

  api:
    build:
      dockerfile: docker/back.Dockerfile
      context: ..
    ports:
      - "3000:3000"
    env_file:
      - ../sr-back/.env
      - ../sr-back/.env.local
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  db:
    image: postgres:15-alpine
    # uncomment to enable db query logging
    # command: ["postgres", "-c", "log_statement=all"]
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shared_rentals
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    build:
      dockerfile: docker/back.Dockerfile
      context: ..
      target: migration
    environment:
      DB_HOST: db
      DB_PORT: 5432
    depends_on:
      - db

volumes:
  postgres_data:

networks:
  default:
